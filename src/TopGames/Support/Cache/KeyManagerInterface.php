<?php

namespace TopGames\Support\Cache;

interface KeyManagerInterface {

    /**
     * Return Cache key generated by using the current active class, id and $with array
     *
     * @param bool $id
     * @param array $array
     *
     * @return string
     */
    function getKey($id = false, array $array = array());

    /**
     * Return the ready-to-be-encrypted-string key generated by using the current active class, id and $with array
     *
     * @param  bool|int  $id
     * @param  array    $array
     * @param  string   $section
     * @param  string   $modelClass
     *
     * @return string
     */
    function getString($id = false, array $array = array(), $section, $modelClass);

    /**
     * Return Cache tags generated by using the current active class, id and with array
     *
     * @param  bool|int  $id
     * @param  array     $array
     * @param  string    $section
     * @param  string    $modelClass
     *
     * @return array
     */
    function getTags($id = false, array $array = array(), $section, $modelClass);

    /**
     * Return a method-customized Cache key generated by using the current active class, id and $with array
     * If not customName is provided, the name of the calling method will be used.
     *
     * @param  bool|string  $customName
     * @param  bool|int     $id
     * @param  array        $array
     * @param  string       $modelClass
     *
     * @return string
     */
    function getCustomMethodKey($customName = false, $id = false, array $array = array(), $modelClass);

    /**
     * Return Cache tags generated by using the current active class, id and with array.
     * It has an additional method-customized tag.
     * If not customName is provided, the name of the calling method will be used.
     *
     * @param  bool|string  $customName
     * @param  bool|int     $id
     * @param  array        $array
     * @param  string       $modelClass
     *
     * @return array
     */
    function getCustomMethodTags($customName = false, $id = false, array $array = array(), $modelClass);

}